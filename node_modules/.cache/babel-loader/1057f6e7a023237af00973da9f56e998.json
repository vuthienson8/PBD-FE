{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga'; // import { history } from '../utils/history';\n\nimport rootSaga from './rootSaga';\nimport { syncHistoryWithStore, routerReducer } from 'react-router-redux';\nconst rootReducer = combineReducers({\n  routing: routerReducer\n});\nexport const history = syncHistoryWithStore(browserHistory, store);\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configStore = () => {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\n      serializableCheck: false\n    }).concat(sagaMiddleware, routerMiddleware(history))\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst store = configStore();\nexport default store;","map":{"version":3,"sources":["/Users/vuson/Dev/pfg-fe/src/app/store.js"],"names":["combineReducers","configureStore","connectRouter","routerMiddleware","createSagaMiddleware","rootSaga","syncHistoryWithStore","routerReducer","rootReducer","routing","history","browserHistory","store","sagaMiddleware","configStore","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,oBAApD;AAEA,MAAMC,WAAW,GAAGR,eAAe,CAAC;AAClCS,EAAAA,OAAO,EAAEF;AADyB,CAAD,CAAnC;AAIA,OAAO,MAAMG,OAAO,GAAGJ,oBAAoB,CAACK,cAAD,EAAiBC,KAAjB,CAApC;AAEP,MAAMC,cAAc,GAAGT,oBAAoB,EAA3C;;AAEA,MAAMU,WAAW,GAAG,MAAM;AACxB,QAAMF,KAAK,GAAGX,cAAc,CAAC;AAC3Bc,IAAAA,OAAO,EAAEP,WADkB;AAE3BQ,IAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACnBC,MAAAA,iBAAiB,EAAE;AADA,KAAD,CAApB,CAEGC,MAFH,CAEUN,cAFV,EAE0BV,gBAAgB,CAACO,OAAD,CAF1C;AAHyB,GAAD,CAA5B;AAOAG,EAAAA,cAAc,CAACO,GAAf,CAAmBf,QAAnB;AACA,SAAOO,KAAP;AACD,CAVD;;AAWA,MAAMA,KAAK,GAAGE,WAAW,EAAzB;AAEA,eAAeF,KAAf","sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\n// import { history } from '../utils/history';\nimport rootSaga from './rootSaga';\nimport { syncHistoryWithStore, routerReducer } from 'react-router-redux';\n\nconst rootReducer = combineReducers({\n  routing: routerReducer,\n});\n\nexport const history = syncHistoryWithStore(browserHistory, store);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configStore = () => {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({\n        serializableCheck: false,\n      }).concat(sagaMiddleware, routerMiddleware(history)),\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\nconst store = configStore();\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}