{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit'; // import { connectRouter, routerMiddleware } from 'connected-react-router';\n\nimport createSagaMiddleware from 'redux-saga'; // import { history } from '../utils/history';\n\nimport rootSaga from './rootSaga';\nimport { browserHistory } from 'react-router';\nimport { syncHistoryWithStore, routerReducer } from 'react-router-redux';\nconst rootReducer = combineReducers({\n  routing: routerReducer\n});\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configStore = () => {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\n      serializableCheck: false\n    }).concat(sagaMiddleware)\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst store = configStore();\nexport const history = syncHistoryWithStore(browserHistory, store);\nexport default store;","map":{"version":3,"sources":["/Users/vuson/Dev/pfg-fe/src/app/store.js"],"names":["combineReducers","configureStore","createSagaMiddleware","rootSaga","browserHistory","syncHistoryWithStore","routerReducer","rootReducer","routing","sagaMiddleware","configStore","store","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","run","history"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,oBAApD;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCQ,EAAAA,OAAO,EAAEF;AADyB,CAAD,CAAnC;AAIA,MAAMG,cAAc,GAAGP,oBAAoB,EAA3C;;AAEA,MAAMQ,WAAW,GAAG,MAAM;AACxB,QAAMC,KAAK,GAAGV,cAAc,CAAC;AAC3BW,IAAAA,OAAO,EAAEL,WADkB;AAE3BM,IAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACnBC,MAAAA,iBAAiB,EAAE;AADA,KAAD,CAApB,CAEGC,MAFH,CAEUP,cAFV;AAHyB,GAAD,CAA5B;AAOAA,EAAAA,cAAc,CAACQ,GAAf,CAAmBd,QAAnB;AACA,SAAOQ,KAAP;AACD,CAVD;;AAWA,MAAMA,KAAK,GAAGD,WAAW,EAAzB;AACA,OAAO,MAAMQ,OAAO,GAAGb,oBAAoB,CAACD,cAAD,EAAiBO,KAAjB,CAApC;AACP,eAAeA,KAAf","sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\n// import { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\n// import { history } from '../utils/history';\nimport rootSaga from './rootSaga';\nimport { browserHistory } from 'react-router';\nimport { syncHistoryWithStore, routerReducer } from 'react-router-redux';\n\nconst rootReducer = combineReducers({\n  routing: routerReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configStore = () => {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({\n        serializableCheck: false,\n      }).concat(sagaMiddleware),\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\nconst store = configStore();\nexport const history = syncHistoryWithStore(browserHistory, store);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}